version: '3.8'

services:
  canvas:
    image: "beohoang98/canvas-lms-docker:latest"
    restart: always
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    env_file:
      - .env
    volumes:
      - files:/home/app/canvas-lms/tmp/files
      - brandable_css:/home/app/canvas-lms/public/dist/brandable_css
    healthcheck:
      test: ["CMD", "curl", "-f", "http://canvas"]
      interval: 10s
      timeout: 10s
      retries: 5

  migration:
    image: "beohoang98/canvas-lms-docker:latest"
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    command: "/home/app/canvas-lms/migration.sh"
    env_file:
      - .env
    volumes:
      - files:/home/app/canvas-lms/tmp/files
      - brandable_css:/home/app/canvas-lms/public/dist/brandable_css

  redis:
    image: "redis:6.0.9-alpine"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: "postgres:12.4-alpine"
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: canvas
      POSTGRES_PASSWORD: canvas
      POSTGRES_DB: canvas_production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U canvas"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  maildev:
    image: "maildev/maildev"
    restart: always
    ports:
      - "1080:1080"

volumes:
  postgres:
  files:
  brandable_css:
